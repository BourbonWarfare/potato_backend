"""single group restricton

Revision ID: 91c5f463160f
Revises: 455b13bfe398
Create Date: 2025-06-26 21:37:27.613392

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '91c5f463160f'
down_revision: Union[str, Sequence[str], None] = '455b13bfe398'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(
        constraint_name='can_be_added_to_group_once',
        table_name='user_groups',
        columns=('user_id', 'group_id'),
    )
    op.create_unique_constraint(
        constraint_name='mission_has_single_iteration',
        table_name='mission_iterations',
        columns=('iteration', 'mission_id'),
    )
    op.create_unique_constraint(
        constraint_name='review_maps_to_single_iteration',
        table_name='test_results',
        columns=('review_id', 'iteration_id'),
    )
    op.create_unique_constraint(
        constraint_name='can_only_cosign_once',
        table_name='test_cosigns',
        columns=('test_result_id', 'tester_id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        constraint_name='can_be_added_to_group_once',
        table_name='user_groups',
    )
    op.drop_constraint(
        constraint_name='mission_has_single_iteration',
        table_name='mission_iterations',
    )
    op.drop_constraint(
        constraint_name='review_maps_to_single_iteration',
        table_name='test_results',
    )
    op.drop_constraint(
        constraint_name='can_only_cosign_once',
        table_name='test_cosigns',
    )
    # ### end Alembic commands ###
